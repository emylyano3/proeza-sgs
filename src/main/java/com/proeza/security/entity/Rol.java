package com.proeza.security.entity;

// Generated 26/08/2014 22:15:54 by Hibernate Tools 4.0.0

import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Cache;

import static javax.persistence.GenerationType.*;
import static org.hibernate.annotations.CacheConcurrencyStrategy.*;

/**
 * Rol generated by hbm2java
 */
@Entity
@Table(
    catalog = "sgs_proeza_db",
    name = "seg_rol",
    uniqueConstraints = @UniqueConstraint(columnNames = "codigo"))
@Cache(usage = NONSTRICT_READ_WRITE)
public class Rol implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    private Long              id;
    private String            codigo;
    private String            nombre;
    private String            descripcion;
    private Set<Usuario>      users;

    public Rol () {
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Long getId () {
        return this.id;
    }

    public void setId (Long id) {
        this.id = id;
    }

    @Column(name = "codigo", nullable = false, length = 20)
    public String getCodigo () {
        return this.codigo;
    }

    public void setCodigo (String codigo) {
        this.codigo = codigo;
    }

    @Column(name = "nombre", nullable = false, length = 50)
    public String getNombre () {
        return this.nombre;
    }

    public void setNombre (String nombre) {
        this.nombre = nombre;
    }

    @Column(name = "descripcion", length = 200)
    public String getDescripcion () {
        return this.descripcion;
    }

    public void setDescripcion (String descripcion) {
        this.descripcion = descripcion;
    }

    @ManyToMany(fetch = FetchType.LAZY, mappedBy = "roles")
    public Set<Usuario> getUsers () {
        return this.users;
    }

    public void setUsers (Set<Usuario> users) {
        this.users = users;
    }

    @Override
    public int hashCode () {
        final int prime = 31;
        int result = 1;
        result = prime * result + (this.codigo == null ? 0 : this.codigo.hashCode());
        result = prime * result + (int) (this.id ^ this.id >>> 32);
        result = prime * result + (this.nombre == null ? 0 : this.nombre.hashCode());
        return result;
    }

    @Override
    public boolean equals (Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        Rol other = (Rol) obj;
        if (this.codigo == null) {
            if (other.codigo != null) {
                return false;
            }
        } else if (!this.codigo.equals(other.codigo)) {
            return false;
        }
        if (this.id != other.id) {
            return false;
        }
        if (this.nombre == null) {
            if (other.nombre != null) {
                return false;
            }
        } else if (!this.nombre.equals(other.nombre)) {
            return false;
        }
        return true;
    }

    @Override
    public String toString () {
        return "Rol [id=" + this.id + ", codigo=" + this.codigo + ", nombre=" + this.nombre + "]";
    }
}